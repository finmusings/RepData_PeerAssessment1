source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/corr.R')
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
ok_list
ok_list["id"]
filename <- paste0(formatC(ok_list[i,"id"], width=3, flag="0"),".csv")
fullpath <- paste(getwd(),directory,filename,sep="/")
filename <- paste0(formatC(ok_list[4,"id"], width=3, flag="0"),".csv")
fullpath <- paste(getwd(),directory,filename,sep="/")
sample<-read.csv(fullpath)
vars<-names(sample)
for(j in vars){
sample<-subset(sample,!is.na(sample[j]))
}
cor(sample["nitrate"],sample["sulfate"])
correl<-numeric(length(ok_list[,1]))
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/corr.R')
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr<-corr("specdata")
summary(cr)
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/submitscript1.R')
rm(list=ls())
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/submitscript1.R')
submit()
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/complete.R')
submit()
submit()
submit()
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/submitscript1.R')
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/complete.R')
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/corr.R')
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/pollutantmean.R')
submit()
getwd()
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/corr.R')
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/corr.R')
submit()
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/corr.R')
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/corr.R')
submit()
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/corr.R')
cr<-corr("specdata",2000)
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/corr.R')
cr<-corr("specdata",2000)
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/corr.R')
cr<-corr("specdata",2000)
length(cr)
submit()
source('C:/Users/uqkalper/Dropbox/Transfer/Coursera/corr.R')
submit()
library(datasets)
data(iris)
sample(iris,Species="virginica")
sample(iris[Species="virginica"])
testdata<-sample(iris,iris[Species="virginica"])
testdata<-sample(iris,Species=="virginica")
testdata<-sample(iris,$Species=="virginica")
library(datasets)
data(iris)
sub_iris<-subset(iris,Species="virginica")
mean(sub_iris[Sepal.Length])
View(sub_iris)
mean(sub_iris[[Sepal.Length]])
?sub_iris
??sub_iris
View(sub_iris)
sub_iris(subset(iris,Species==virginica))
sub_iris<-subset(iris,Species==virginica)
sub_iris<-subset(iris,Species=="virginica")
colMeans(sub_iris)
colmeans(sub_iris[Sepal.Length])
colMeans(sub_iris[Sepal.Length])
mean(Sepal.Length)
mean(sub_iris["Sepal.Length"])
mean(sub_iris["Sepal.Length"])
cor(sub_iris["Sepal.Length"],sub_iris["Sepal.Width"])
mean(sub_iris["Sepal.Length"])
colMeans(sub_iris["Sepal.Length"])
colMeans(iris)
apply(iris[,1:4],1,mean)
apply(iris,2,mean)
apply(iris,1:4),2,mean)
apply(iris[,1:4],2,mean)
library datasets
library(datasets)
data(mtcars)
?rm
rm(list=ls())
library(datasets)
data(mtcars)
tapply(mtcars$cyl,mtcars$mpg,mean)
lapply(mtcars,mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
split(mtcars, mtcars$cyl)
View(mtcars)
sapply(split(mtcars$hp,mtcars$cyl),mean)
testdata<-sapply(split(mtcars$hp,mtcars$cyl),mean)
testdata$8
testdata
testdata[3]
testdata[3,2]-testdata[1,2]
testdata[3]-testdata[1]
debug(ls)
ls
set.seed(1)
rpois(5,2)
?qpois
source('C:/Users/Karen/Dropbox/Transfer/Coursera/GrabFileData1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Karen/Dropbox/Transfer/Coursera/GrabFileData1.R', echo=TRUE)
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-ThisDir & "/GDW1"
SaveAs<-SavePath & "Quiz1Q1.csv"
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-ThisDir & "/GDW1"
SaveAs<-SavePath & "Quiz1Q1.csv"
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,destfile=SaveAs)
DateDownloaded<-date()
SaveAs<-paste(SavePath , "/Quiz1Q1.csv")
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste(ThisDir, "/GDW1")
SaveAs<-paste(SavePath , "/Quiz1Q1.csv")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,destfile=SaveAs)
DateDownloaded<-date()
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q1.csv")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,destfile=SaveAs)
DateDownloaded<-date()
QuizData <- read.csv(SaveAs)
head(QuizData)
highValue <- subset(QuizData,VAL==24)
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q3.xlsx")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl,destfile=SaveAs)
DateDownloaded<-date()
library(xlsx)
colIndex<-7:15
rowIndex<-18:23
dat <- read.xlsx(SaveAs,sheetIndex=1,header=true,colIndex=colIndex,rowIndex=rowIndex)
val<-sum(dat$Zip*dat$Ext,na.rm=T)
install.packages('xlsx')
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q3.xlsx")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl,destfile=SaveAs)
DateDownloaded<-date()
library(xlsx)
colIndex<-7:15
rowIndex<-18:23
dat <- read.xlsx(SaveAs,sheetIndex=1,header=true,colIndex=colIndex,rowIndex=rowIndex)
val<-sum(dat$Zip*dat$Ext,na.rm=T)
install.packages("xlsx")
install.packages("XLConnect")
install.packages('xlsx')
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q3.xlsx")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl,destfile=SaveAs)
DateDownloaded<-date()
library(xlsx)
colIndex<-7:15
rowIndex<-18:23
dat <- read.xlsx(SaveAs,sheetIndex=1,header=true,colIndex=colIndex,rowIndex=rowIndex)
val<-sum(dat$Zip*dat$Ext,na.rm=T)
find.java()
$`1.7.0_60`$JavaHome
JavaHome
install.packages("xlsx")
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q3.xlsx")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl,destfile=SaveAs)
DateDownloaded<-date()
library(xlsx)
colIndex<-7:15
rowIndex<-18:23
dat <- read.xlsx(SaveAs,sheetIndex=1,header=true,colIndex=colIndex,rowIndex=rowIndex)
val<-sum(dat$Zip*dat$Ext,na.rm=T)
download.file(fileUrl,destfile=SaveAs,mode='wb')
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q3.xlsx")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl,destfile=SaveAs,mode='wb')
DateDownloaded<-date()
library(xlsx)
colIndex<-7:15
rowIndex<-18:23
dat <- read.xlsx(SaveAs,sheetIndex=1,header=true,colIndex=colIndex,rowIndex=rowIndex)
val<-sum(dat$Zip*dat$Ext,na.rm=T)
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q3.xlsx")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl,destfile=SaveAs,mode='wb')
DateDownloaded<-date()
library(xlsx)
colIndex<-7:15
rowIndex<-18:23
dat <- read.xlsx(SaveAs,sheetIndex=1,header=TRUE,colIndex=colIndex,rowIndex=rowIndex)
val<-sum(dat$Zip*dat$Ext,na.rm=T)
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q4.xml")
library(XML)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
DateDownloaded<-date()
library("xlsx", lib.loc="~/R/win-library/3.2")
install.packages("XML")
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q4.xml")
library(XML)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
DateDownloaded<-date()
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q4.xml")
library(XML)
setInternet2(use = TRUE)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
DateDownloaded<-date()
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q4.xml")
library(XML)
setInternet2(use = TRUE)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
DateDownloaded<-date()
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q4.xml")
library(XML)
setInternet2(use = TRUE)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(fileUrl,destfile=SaveAs)
doc <- xmlTreeParse(SaveAs,useInternal=TRUE)
DateDownloaded<-date()
head(doc)
rootNode <-xmlRoot(doc)
xmlName(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
ziplist<-xpathSApply(rootNode,"//zipcode",xmlValue)
head(ziplist)
there <- subset(rootNode,"21231")
there <- subset(rootNode,[1]=="21231")
there <- subset(rootNode,rootNode[1]=="21231")
there <- subset(rootNode,rootNode[]=="21231")
there <- subset(rootNode,rootNode=="21231")
there <- subset(ziplist,ziplist=="21231")
length(there)
ThisDir<-getwd()
if(!file.exists("GDW1"))  {dir.create("GDW1")}
SavePath<-paste0(ThisDir, "/GDW1")
SaveAs<-paste0(SavePath , "/Quiz1Q5.csv")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl,destfile=SaveAs)
DateDownloaded<-date()
Library(data.table)
DT<-fread(SaveAs)
library(data.table)
install.packages("data.table")
library(data.table)
DT<-fread(SaveAs)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
head(DT)
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
sapply(split(DT$pwgtp15,DT$SEX),mean)
DT[,mean(pwgtp15),by=SEX]
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15) mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.tiem(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = False)
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim()
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
filter(cran, is.na(r_version) == FALSE)
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version) )
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avt_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
library(httr)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "6a7bf35fe3810ab48e9b",
secret = "94a1e496fed9dd587324c3b8ed5176c0920bf442")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "6a7bf35fe3810ab48e9b",
secret = "94a1e496fed9dd587324c3b8ed5176c0920bf442")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "6a7bf35fe3810ab48e9b",
secret = "94a1e496fed9dd587324c3b8ed5176c0920bf442")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
library("jsonlite", lib.loc="~/R/win-library/3.2")
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
names(json2)
DSD<-fromJSON(json2[name=="datasharing"])
DSD<-fromJSON(json2[json2$name=="datasharing"])
DSD<-fromJSON(json2["name"=="datasharing"])
json2$name
datashare = jsonlite::fromJSON(json2$name=="datasharing")
datashare = json2$created_at[[json2$name=="datasharing"]]
datashare = json2$created_at[json2$name=="datasharing"]
datashare
infile<-file.choose()
infile<-file.choose()
setwd(dirname(infile))
dataset<-read.csv(infile)
sqldf("select pwgtp1 from acs where AGEP < 50")
install.packages("sqldf")
sqldf("select pwgtp1 from acs where AGEP < 50")
library("sqldf", lib.loc="~/R/win-library/3.2")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
infile<-file.choose()
setwd(dirname(infile))
acs<-read.csv(infile)
sqldf("select pwgtp1 from acs where AGEP < 50")
head(acs)
subset <- sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
sqldf("select unique AGEP from acs")
fileUrl <- "http://biostat.jhsph.edu/~jleek/contact.html"
doc <- htmlTreeParse(fileUrl,useInternal=TRUE)
library(XML)
fileUrl <- "http://biostat.jhsph.edu/~jleek/contact.html"
doc <- htmlTreeParse(fileUrl,useInternal=TRUE)
head(doc)
names(doc)
doc <- htmlParse(fileUrl,useInternal=TRUE)
doc
doc[1]
doc[1:9]
doc <- htmlParse(fileUrl)
doc
doc[1]
doc <- htmlTreeParse(fileUrl)
doc
doc(1)
doc[1]
doc[2]
names(doc)
doc[3]
doc$children$html
doc$children$html[1]
h_text<-doc$children$html
head(h_text)
names(h_text)
h_text[10]
fileUrl <- "http://biostat.jhsph.edu/~jleek/contact.html"
con <- url(fileUrl)
InPut <- readlines(con)
InPut <- readLines(con)
InPut
nchr(InPut[10])
nchar(InPut[10])
nchar(InPut[20])
nchar(InPut[178])
nchar(InPut[10])
nchar(InPut[20])
nchar(InPut[30])
nchar(InPut[100])
infile<-file.choose()
setwd(dirname(infile))
inPut<-read.fwf(infile,header=TRUE)
inPut<-read.fwf(infile,header=TRUE,skip=4,widths=c(10,9,4,9,4,9,4,9,4))
inPut<-read.fwf(infile,header=FALSE,skip=5,widths=c(10,9,4,9,4,9,4,9,4))
inPut
head(inPut)
inPut<-read.fwf(infile,header=FALSE,skip=4,widths=c(10,9,4,9,4,9,4,9,4))
head(inPut)
sum(inPut[,4])
install.packages("xtable")
fit_table<-read.csv("activity.csv")
getwd()
setwd("C:/Users/Karen/Dropbox/Transfer/Coursera/RPDataPeer1")
fit_table<-read.csv("activity.csv")
names(fit_table)
mean(fit_table$steps, na.rm=TRUE)
by(fit_table$steps,fit_table$date,mean,na.rm=TRUE)
daily_steps <- by(fit_table$steps,fit_table$date,mean,na.rm=TRUE)
daily_steps
library("xtable", lib.loc="~/R/win-library/3.2")
xtable(daily_steps)
print(daily_steps)
print(daily_steps, type="html")
